version: '3.9'

services:
# database
  mysql-db:
    user: root
    image: 'mysql'
    restart: 'always'
    command: --default-authentication-plugin=mysql_native_password
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: user
      MYSQL_PASSWORD: hippopotamus@1
      MYSQL_DATABASE: alinedb
    expose:
      - 3306
    volumes:
      - ./init/:/docker-entrypoint-initdb.d/
      - dbdata:/var/lib/mysql
    networks:
      - aline
  adminer:
    image: 'adminer'
    restart: 'always'
    ports:
      - '8084:8080'
    networks:
      - aline
# gateway
  gateway:
    build:
      context: ./backend/gateway
      dockerfile: Dockerfile
    image: 'aline-gateway'
    container_name: gateway
    env_file:
      - .env
    environment:
      APP_PORT: 8080
      APP_SERVICE_HOST: proxy
    networks:
      - aline
    expose:
      - 8080
    ports:
      - 8080:8080

# proxy
  proxy:
    image: nginx:latest
    container_name: nginx_proxy
    volumes:
      - ./proxy/reverse_proxy.conf:/etc/nginx/nginx.conf
    networks:
      - aline
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
# microservices
  underwriter-microservice:
    build:
      context: ./backend/bank
      dockerfile: Dockerfile
    image: 'underwriter'
    container_name: underwriter
    depends_on:
      - mysql-db
    env_file:
      - .env
    environment:
      APP_PORT: 8071
    expose:
      - 8071
    # ports:
    #   - 8071:8071
    networks:
      - aline
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
  bank-microservice:
    build:
      context: ./backend/bank
      dockerfile: Dockerfile
    image: 'bank'
    container_name: bank
    depends_on:
      - mysql-db
    env_file: .env
    environment: 
      APP_PORT: 8083
    expose:
      - 8083
    # ports:
    #   - 8083:8083
    networks:
      - aline
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
  transaction-microservice:
    build:
      context: ./backend/transaction
      dockerfile: Dockerfile
    image: 'transaction'
    container_name: transaction
    depends_on:
      - mysql-db
    env_file: .env
    environment:
      APP_PORT: 8073
    expose:
      - 8073
    # ports:
    #   - 8073:8073
    networks:
      - aline
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
  user-microservice:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    image: 'user'
    container_name: user
    depends_on:
      - mysql-db
    env_file: .env
    environment:
      APP_PORT: 8070
    expose:
      - 8070
    networks:
      - aline
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
# TODO frontend

volumes:
  dbdata: 

networks:
  aline:
    driver: overlay
    name: aline
    ipam: 
      config:
          - subnet: 172.31.0.0/16
